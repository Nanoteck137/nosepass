// DO NOT EDIT THIS: This file was generated by the Pyrin Typescript Generator
import { z } from "zod";

export const GetSystemInfo = z.object({
  version: z.string(),
});
export type GetSystemInfo = z.infer<typeof GetSystemInfo>;

export const Signup = z.object({
  id: z.string(),
  username: z.string(),
});
export type Signup = z.infer<typeof Signup>;

export const SignupBody = z.object({
  username: z.string(),
  password: z.string(),
  passwordConfirm: z.string(),
});
export type SignupBody = z.infer<typeof SignupBody>;

export const Signin = z.object({
  token: z.string(),
});
export type Signin = z.infer<typeof Signin>;

export const SigninBody = z.object({
  username: z.string(),
  password: z.string(),
});
export type SigninBody = z.infer<typeof SigninBody>;

export const ChangePasswordBody = z.object({
  currentPassword: z.string(),
  newPassword: z.string(),
  newPasswordConfirm: z.string(),
});
export type ChangePasswordBody = z.infer<typeof ChangePasswordBody>;

export const GetMe = z.object({
  id: z.string(),
  username: z.string(),
  role: z.string(),
  displayName: z.string(),
});
export type GetMe = z.infer<typeof GetMe>;

export const UpdateUserSettingsBody = z.object({
  displayName: z.string().nullable().optional(),
});
export type UpdateUserSettingsBody = z.infer<typeof UpdateUserSettingsBody>;

export const CreateApiToken = z.object({
  token: z.string(),
});
export type CreateApiToken = z.infer<typeof CreateApiToken>;

export const CreateApiTokenBody = z.object({
  name: z.string(),
});
export type CreateApiTokenBody = z.infer<typeof CreateApiTokenBody>;

export const ApiToken = z.object({
  id: z.string(),
  name: z.string(),
});
export type ApiToken = z.infer<typeof ApiToken>;

export const GetAllApiTokens = z.object({
  tokens: z.array(ApiToken),
});
export type GetAllApiTokens = z.infer<typeof GetAllApiTokens>;

export const Media = z.object({
  id: z.string(),
  path: z.string(),
});
export type Media = z.infer<typeof Media>;

export const GetMedia = z.object({
  media: z.array(Media),
});
export type GetMedia = z.infer<typeof GetMedia>;

export const MediaAudio = z.object({
  index: z.number(),
  language: z.string(),
});
export type MediaAudio = z.infer<typeof MediaAudio>;

export const MediaSubtitle = z.object({
  index: z.number(),
  language: z.string(),
  title: z.string(),
});
export type MediaSubtitle = z.infer<typeof MediaSubtitle>;

export const FullMedia = z.object({
  id: z.string(),
  path: z.string(),
  audioTracks: z.array(MediaAudio),
  subtitles: z.array(MediaSubtitle),
});
export type FullMedia = z.infer<typeof FullMedia>;

export const GetLibraryStatus = z.object({
  syncing: z.boolean(),
});
export type GetLibraryStatus = z.infer<typeof GetLibraryStatus>;

export const Serie = z.object({
  id: z.string(),
  name: z.string(),
});
export type Serie = z.infer<typeof Serie>;

export const GetSeries = z.object({
  series: z.array(Serie),
});
export type GetSeries = z.infer<typeof GetSeries>;

export const SerieSeason = z.object({
  id: z.string(),
  name: z.string(),
});
export type SerieSeason = z.infer<typeof SerieSeason>;

export const GetSerieById = z.object({
  id: z.string(),
  name: z.string(),
  seasons: z.array(SerieSeason),
});
export type GetSerieById = z.infer<typeof GetSerieById>;

export const SeasonEpisodeVariant = z.object({
  id: z.string(),
  name: z.string(),
  language: z.string(),
});
export type SeasonEpisodeVariant = z.infer<typeof SeasonEpisodeVariant>;

export const SeasonEpisode = z.object({
  id: z.string(),
  name: z.string(),
  variants: z.array(SeasonEpisodeVariant),
});
export type SeasonEpisode = z.infer<typeof SeasonEpisode>;

export const GetSeasonById = z.object({
  id: z.string(),
  name: z.string(),
  episodes: z.array(SeasonEpisode),
});
export type GetSeasonById = z.infer<typeof GetSeasonById>;

